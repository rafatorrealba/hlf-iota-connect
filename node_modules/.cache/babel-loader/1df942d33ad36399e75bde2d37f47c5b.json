{"ast":null,"code":"import _defineProperty from \"/home/alejandro/connector/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/alejandro/connector/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alejandro/connector/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alejandro/connector/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alejandro/connector/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/alejandro/connector/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/alejandro/connector/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alejandro/connector/app/src/App.js\";\nimport React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport Notification from './Notification';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.notifySuccess = function (message) {\n      return toast.success(message);\n    };\n\n    _this.notifyError = function (message) {\n      return toast.error(message);\n    };\n\n    _this.handleTextChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.state = {\n      containerId: '',\n      newHolderContainerId: '',\n      newHolderName: '',\n      newContainerId: '',\n      containerDescription: '',\n      longitude: '',\n      latitude: '',\n      holderName: '',\n      allContainers: []\n    };\n    _this.changeHolder = _this.changeHolder.bind(_assertThisInitialized(_this));\n    _this.createRecord = _this.createRecord.bind(_assertThisInitialized(_this));\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_this));\n    _this.queryContainer = _this.queryContainer.bind(_assertThisInitialized(_this));\n    _this.queryAllContainers = _this.queryAllContainers.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"createRecord\",\n    value: function createRecord(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var _this$state = this.state,\n          newContainerId = _this$state.newContainerId,\n          containerDescription = _this$state.containerDescription,\n          longitude = _this$state.longitude,\n          latitude = _this$state.latitude,\n          holderName = _this$state.holderName;\n\n      if (newContainerId && containerDescription && longitude && latitude && holderName) {\n        fetch('create', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            key: newContainerId,\n            holder: holderName,\n            description: containerDescription,\n            location: \"\".concat(longitude, \", \").concat(latitude)\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.success && data.result) {\n            _this2.notifySuccess('New record was created');\n          } else {\n            console.error(data.error);\n\n            _this2.notifyError('Something went wrong');\n          }\n        });\n      }\n    }\n  }, {\n    key: \"changeHolder\",\n    value: function changeHolder(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      var _this$state2 = this.state,\n          allContainers = _this$state2.allContainers,\n          newHolderContainerId = _this$state2.newHolderContainerId,\n          newHolderName = _this$state2.newHolderName;\n\n      if (newHolderContainerId && newHolderName) {\n        var container = allContainers.find(function (_ref) {\n          var Key = _ref.Key;\n          return Key === newHolderContainerId;\n        });\n\n        if (container && container.Record.holder === 'Retailer') {\n          console.error('Container arrived to retailer. No further change possible');\n          this.notifyError('Container arrived to retailer. No further change possible');\n          return;\n        }\n\n        fetch('change', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: newHolderContainerId,\n            holder: newHolderName\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.success && data.result) {\n            _this3.notifySuccess('Holder was changed');\n          } else {\n            console.error(data.error);\n\n            _this3.notifyError('Something went wrong');\n          }\n        });\n      }\n    }\n  }, {\n    key: \"queryContainer\",\n    value: function queryContainer(event) {\n      var _this4 = this;\n\n      event.preventDefault();\n      var containerId = this.state.containerId;\n\n      if (containerId) {\n        fetch(\"get/\".concat(encodeURIComponent(containerId))).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.success && data.result) {\n            var result = JSON.parse(data.result);\n\n            _this4.setState({\n              allContainers: [{\n                Key: containerId,\n                Record: result.container\n              }]\n            });\n\n            console.log(\"Wallet Address\", result.wallet);\n            console.log(\"MAM Root\", result.mamstate.root);\n            console.log(\"MAM payload: \");\n            console.log(result.messages);\n            console.log(\"======================\");\n          } else {\n            console.error(data.error);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"queryAllContainers\",\n    value: function queryAllContainers(event) {\n      var _this5 = this;\n\n      event.preventDefault();\n      fetch('get_all').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.success && data.result) {\n          _this5.setState({\n            allContainers: data.result\n          });\n        } else {\n          console.error(data.error);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"left_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Hyperledger Fabric Demo Application\"), React.createElement(\"i\", {\n        id: \"right_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Example Blockchain Application for Hyperledger Fabric\")), React.createElement(\"div\", {\n        className: \"queryContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.queryContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Query a Specific Container\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), \"Enter a container ID: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"containerId\",\n        type: \"number\",\n        placeholder: \"Ex: 3\",\n        value: this.state.containerId,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Query Container Record\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"queryAllContainers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Query All Containers\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.queryAllContainers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Query All Containers\")), this.state.allContainers.length ? React.createElement(\"table\", {\n        id: \"all_containers\",\n        className: \"table\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Timestamp\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Holder\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Container Location (Longitude, Latitude)\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Container Description\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.allContainers.sort(function (a, b) {\n        return parseFloat(a.Key) - parseFloat(b.Key);\n      }).map(function (container) {\n        return React.createElement(\"tr\", {\n          key: container.Key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, container.Key), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, container.Record.timestamp), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, container.Record.holder), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, container.Record.location), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, container.Record.description));\n      }))) : null), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"createRecord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.createRecord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Create Container Record\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), \"Enter container id:\", React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"newContainerId\",\n        name: \"newContainerId\",\n        type: \"text\",\n        placeholder: \"Ex: 11\",\n        value: this.state.newContainerId,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), \"Enter container description:\", React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"containerDescription\",\n        name: \"containerDescription\",\n        type: \"text\",\n        placeholder: \"Ex: 0239L\",\n        value: this.state.containerDescription,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), \"Enter longitude:\", React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"longitude\",\n        name: \"longitude\",\n        type: \"number\",\n        placeholder: \"Ex: 28.012\",\n        value: this.state.longitude,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), \"Enter latitude:\", React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"latitude\",\n        name: \"latitude\",\n        type: \"number\",\n        placeholder: \"Ex: 150.405\",\n        value: this.state.latitude,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), \"Enter name of holder:\", React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"holderName\",\n        name: \"holderName\",\n        type: \"text\",\n        placeholder: \"Ex: Hansel\",\n        value: this.state.holderName,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Create record\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"changeContainerHolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.changeHolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Change Container Holder\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), \"Enter a container ID:\", React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"newHolderContainerId\",\n        name: \"newHolderContainerId\",\n        placeholder: \"Ex: 1\",\n        type: \"number\",\n        value: this.state.newHolderContainerId,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), \"Enter name of new holder:\", React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"newHolderName\",\n        name: \"newHolderName\",\n        placeholder: \"Ex: Barry\",\n        type: \"text\",\n        value: this.state.newHolderName,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Change\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(Notification, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/alejandro/connector/app/src/App.js"],"names":["React","Component","toast","Notification","App","props","notifySuccess","message","success","notifyError","error","handleTextChange","event","setState","target","id","value","state","containerId","newHolderContainerId","newHolderName","newContainerId","containerDescription","longitude","latitude","holderName","allContainers","changeHolder","bind","createRecord","queryContainer","queryAllContainers","preventDefault","fetch","method","headers","body","JSON","stringify","key","holder","description","location","then","response","json","data","result","console","container","find","Key","Record","encodeURIComponent","parse","log","wallet","mamstate","root","messages","length","sort","a","b","parseFloat","map","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport Notification from './Notification'; \nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      containerId: '',\n      newHolderContainerId: '',\n      newHolderName: '',\n      newContainerId: '',\n      containerDescription: '',\n      longitude: '',\n      latitude: '',\n      holderName: '',\n      allContainers: []\n    };\n\n    this.changeHolder = this.changeHolder.bind(this);\n    this.createRecord = this.createRecord.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.queryContainer = this.queryContainer.bind(this);\n    this.queryAllContainers = this.queryAllContainers.bind(this);\n  }\n\n  notifySuccess = message => toast.success(message);\n  notifyError = message => toast.error(message);\n\n  createRecord(event) {\n    event.preventDefault();\n    const { newContainerId, containerDescription, longitude, latitude, holderName } = this.state;\n    if (newContainerId && containerDescription && longitude && latitude && holderName) {\n      fetch('create', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          key: newContainerId,\n          holder: holderName,\n          description: containerDescription,\n          location: `${longitude}, ${latitude}`\n        }),\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success && data.result) {\n          this.notifySuccess('New record was created');\n        } else {\n          console.error(data.error);\n          this.notifyError('Something went wrong');\n        }\n      });\n    }\n  }\n\n  changeHolder(event) {\n    event.preventDefault();\n    const { allContainers, newHolderContainerId, newHolderName } = this.state;\n    if (newHolderContainerId && newHolderName) {\n      const container = allContainers.find(({ Key }) => Key === newHolderContainerId)\n      if (container && container.Record.holder === 'Retailer') {\n        console.error('Container arrived to retailer. No further change possible');\n        this.notifyError('Container arrived to retailer. No further change possible');\n        return\n      }\n\n      fetch('change', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: newHolderContainerId,\n          holder: newHolderName\n        }),\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success && data.result) {\n          this.notifySuccess('Holder was changed');\n        } else {\n          console.error(data.error);\n          this.notifyError('Something went wrong');\n        }\n      });\n    }\n  }\n\n  handleTextChange = event => {\n    this.setState({ [event.target.id]: event.target.value });\n  };\n\n  queryContainer(event) {\n    event.preventDefault();\n    const { containerId } = this.state;\n    if (containerId) {\n      fetch(`get/${encodeURIComponent(containerId)}`)\n        .then(response => response.json())\n        .then(data => {\n          if (data.success && data.result) {\n            const result = JSON.parse(data.result)\n\n            this.setState({ \n              allContainers: [{ Key: containerId, Record: result.container }]\n            });\n            console.log(\"Wallet Address\", result.wallet)\n            console.log(\"MAM Root\", result.mamstate.root)\n            console.log(\"MAM payload: \")\n            console.log(result.messages)\n            console.log(\"======================\")\n          } else {\n            console.error(data.error);\n          }\n      });\n    }\n  }\n\n  queryAllContainers(event) {\n    event.preventDefault();\n    fetch('get_all')\n      .then(response => response.json())\n      .then(data => {\n        if (data.success && data.result) {\n          this.setState({ allContainers: data.result });\n        } else {\n          console.error(data.error);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <div id=\"left_header\">Hyperledger Fabric Demo Application</div>\n          <i id=\"right_header\">Example Blockchain Application for Hyperledger Fabric</i>\n        </header>\n        <div className=\"queryContainer\">\n          <form onSubmit={this.queryContainer}>\n            <label>Query a Specific Container</label><br />\n            Enter a container ID: <br />\n            <input\n              id=\"containerId\"\n              type=\"number\"\n              placeholder=\"Ex: 3\"\n              value={this.state.containerId}\n              onChange={this.handleTextChange}\n            />\n            <br />\n            <button type=\"submit\" className=\"btn btn-primary\">Query Container Record</button>\n          </form>\n        </div>\n        <br />\n        <br />\n\n        <div className=\"queryAllContainers\">\n          <div className=\"form-group\">\n            <label>Query All Containers</label><br />\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.queryAllContainers}>Query All Containers</button>\n          </div>\n \n          {\n            this.state.allContainers.length ? (\n              <table id=\"all_containers\" className=\"table\" align=\"center\">\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>Timestamp</th>\n                    <th>Holder</th>\n                    <th>Container Location (Longitude, Latitude)</th>\n                    <th>Container Description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    this.state.allContainers\n                    .sort((a, b) => parseFloat(a.Key) - parseFloat(b.Key))\n                    .map(container => (\n                      <tr key={container.Key}>\n                        <td>{container.Key}</td>\n                        <td>{container.Record.timestamp}</td>\n                        <td>{container.Record.holder}</td>\n                        <td>{container.Record.location}</td>\n                        <td>{container.Record.description}</td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </table>\n            ) : null\n          }\n        </div>\n\n        <br />\n        <br />\n\n        <div className=\"createRecord\">\n          <form onSubmit={this.createRecord}>\n            <label>Create Container Record</label>\n            <br />\n            Enter container id:\n            <input\n              className=\"form-control\" \n              id=\"newContainerId\"\n              name=\"newContainerId\" \n              type=\"text\" \n              placeholder=\"Ex: 11\" \n              value={this.state.newContainerId}\n              onChange={this.handleTextChange}\n            />\n            Enter container description: \n            <input \n              className=\"form-control\" \n              id=\"containerDescription\"\n              name=\"containerDescription\" \n              type=\"text\" \n              placeholder=\"Ex: 0239L\" \n              value={this.state.containerDescription}\n              onChange={this.handleTextChange}\n            />\n            Enter longitude: \n            <input \n              className=\"form-control\" \n              id=\"longitude\"\n              name=\"longitude\" \n              type=\"number\" \n              placeholder=\"Ex: 28.012\"\n              value={this.state.longitude}\n              onChange={this.handleTextChange}\n            /> \n            Enter latitude: \n            <input \n              className=\"form-control\" \n              id=\"latitude\"\n              name=\"latitude\" \n              type=\"number\" \n              placeholder=\"Ex: 150.405\"\n              value={this.state.latitude}\n              onChange={this.handleTextChange}\n            />\n            Enter name of holder: \n            <input \n              className=\"form-control\" \n              id=\"holderName\"\n              name=\"holderName\" \n              type=\"text\" \n              placeholder=\"Ex: Hansel\" \n              value={this.state.holderName}\n              onChange={this.handleTextChange}\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">Create record</button>\n          </form>\n        </div>\n\n        <br />\n        <br />\n\n        <div className=\"changeContainerHolder\">\n          <form onSubmit={this.changeHolder}>\n            <label>Change Container Holder</label><br />\n             Enter a container ID:\n            <input\n              className=\"form-control\"\n              id=\"newHolderContainerId\"\n              name=\"newHolderContainerId\" \n              placeholder=\"Ex: 1\" \n              type=\"number\"\n              value={this.state.newHolderContainerId}\n              onChange={this.handleTextChange}\n            />\n            Enter name of new holder:\n            <input\n              className=\"form-control\"\n              id=\"newHolderName\"\n              name=\"newHolderName\"\n              placeholder=\"Ex: Barry\"\n              type=\"text\"\n              value={this.state.newHolderName}\n              onChange={this.handleTextChange}\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">Change</button>\n          </form>\n        </div>\n        \n        <br /><br /><br />\n        <Notification />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}